{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Model Entry Schema",
  "description": "Schema for registering AI models in Codex Immortal v26.0",
  "type": "object",
  "required": [
    "model_id",
    "name",
    "version",
    "provider",
    "type"
  ],
  "properties": {
    "model_id": {
      "type": "string",
      "description": "Unique identifier for the model",
      "pattern": "^[a-z0-9-]+$",
      "minLength": 3,
      "maxLength": 100
    },
    "name": {
      "type": "string",
      "description": "Human-readable model name",
      "minLength": 1,
      "maxLength": 200
    },
    "version": {
      "type": "string",
      "description": "Model version (semver format)",
      "pattern": "^\\d+\\.\\d+\\.\\d+(-[a-z0-9-]+)?$"
    },
    "provider": {
      "type": "string",
      "description": "Model provider",
      "enum": [
        "openai",
        "anthropic",
        "google",
        "meta",
        "mistral",
        "cohere",
        "custom"
      ]
    },
    "type": {
      "type": "string",
      "description": "Type of model",
      "enum": [
        "text-generation",
        "chat",
        "embedding",
        "image-generation",
        "image-analysis",
        "audio-transcription",
        "audio-generation",
        "multimodal"
      ]
    },
    "description": {
      "type": "string",
      "description": "Detailed model description",
      "maxLength": 1000
    },
    "capabilities": {
      "type": "array",
      "description": "Model capabilities",
      "items": {
        "type": "string",
        "enum": [
          "function-calling",
          "streaming",
          "vision",
          "json-mode",
          "system-instructions",
          "tool-use",
          "code-execution"
        ]
      }
    },
    "context_window": {
      "type": "integer",
      "description": "Maximum context window in tokens",
      "minimum": 1,
      "maximum": 2000000
    },
    "max_output_tokens": {
      "type": "integer",
      "description": "Maximum output tokens",
      "minimum": 1,
      "maximum": 100000
    },
    "pricing": {
      "type": "object",
      "description": "Model pricing information",
      "properties": {
        "input_per_1k_tokens": {
          "type": "number",
          "description": "Cost per 1K input tokens (USD)",
          "minimum": 0
        },
        "output_per_1k_tokens": {
          "type": "number",
          "description": "Cost per 1K output tokens (USD)",
          "minimum": 0
        },
        "currency": {
          "type": "string",
          "default": "USD"
        }
      }
    },
    "performance": {
      "type": "object",
      "description": "Performance metrics",
      "properties": {
        "latency_p50_ms": {
          "type": "number",
          "description": "P50 latency in milliseconds"
        },
        "latency_p99_ms": {
          "type": "number",
          "description": "P99 latency in milliseconds"
        },
        "throughput_tps": {
          "type": "number",
          "description": "Throughput in tokens per second"
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata",
      "properties": {
        "training_data_cutoff": {
          "type": "string",
          "format": "date",
          "description": "Training data cutoff date"
        },
        "languages": {
          "type": "array",
          "description": "Supported languages",
          "items": {
            "type": "string"
          }
        },
        "license": {
          "type": "string",
          "description": "Model license"
        },
        "homepage": {
          "type": "string",
          "format": "uri",
          "description": "Model homepage URL"
        }
      }
    },
    "registered_at": {
      "type": "string",
      "format": "date-time",
      "description": "Registration timestamp"
    },
    "registered_by": {
      "type": "string",
      "description": "User who registered the model"
    }
  },
  "additionalProperties": false
}
