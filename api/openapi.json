{
  "openapi": "3.0.3",
  "info": {
    "title": "Codex Immortal API",
    "version": "26.0.0",
    "description": "Codex Immortal v26.0 â€” Marketplace & SDKs API Specification",
    "contact": {
      "name": "Domion Nexus",
      "url": "https://domionnexus.com"
    },
    "license": {
      "name": "ECCL-1.0",
      "url": "https://domionnexus.com/license"
    }
  },
  "servers": [
    {
      "url": "https://api.domionnexus.com/v26",
      "description": "Production API v26.0"
    },
    {
      "url": "https://api-staging.domionnexus.com/v26",
      "description": "Staging API v26.0"
    }
  ],
  "paths": {
    "/marketplace/apps": {
      "get": {
        "summary": "List marketplace applications",
        "operationId": "listMarketplaceApps",
        "tags": ["Marketplace"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of marketplace applications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apps": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MarketplaceApp"
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/verify": {
      "post": {
        "summary": "Verify webhook signature",
        "operationId": "verifyWebhook",
        "tags": ["Webhooks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signature": {
                    "type": "string"
                  },
                  "payload": {
                    "type": "string"
                  },
                  "timestamp": {
                    "type": "integer"
                  }
                },
                "required": ["signature", "payload", "timestamp"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Signature verification result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/models/register": {
      "post": {
        "summary": "Register AI model",
        "operationId": "registerModel",
        "tags": ["Models"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelEntry"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Model registered successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MarketplaceApp": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "approved", "rejected"]
          }
        },
        "required": ["id", "name", "version", "status"]
      },
      "ModelEntry": {
        "type": "object",
        "properties": {
          "model_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          }
        },
        "required": ["model_id", "name", "version", "provider"]
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "BearerAuth": []
    }
  ]
}
